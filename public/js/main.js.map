{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/posts.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Post } from './posts';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  \n  public posts: Post[];\n\n\n\n  constructor(\n    public dialog: MatDialog,\n    private postService: PostService,  \n  ){}\n\n  ngOnInit() {\n    this.posts = this.postService.posts;\n  }\n  \n  openDialog() {\n    const dialogRef = this.dialog.open(\n      PostDialogComponent,\n      {\n        width: \"700px\"\n      },\n    );\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if(result) {\n          this.postService.salvar(result.post, result.arquivo);\n        }\n    })\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>Projeto: laravel + angular</span>\n</mat-toolbar>\n<mat-divider></mat-divider>\n\n<!-- <app-post-dialog></app-post-dialog> -->\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n    <mat-icon>\n        add\n    </mat-icon>\n</button>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBadgeModule } from '@angular/material/badge';\n// import { Add } from '@angular/material/icon';\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    \n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  providers: [\n    PostService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../posts';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n\n  public nomeArquivo: String = '';\n\n  public dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<PostDialogComponent> \n  ) { \n\n  }\n\n  ngOnInit(): void {\n  }\n\n  mudouArquivo(event) {\n    // console.log(event.target.files[0]);\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar() {\n    this.dialogRef.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogRef.close(null);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"40\">\n            <input matInput type=\"text\" placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput type=\"text\" placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu e-mail</mat-hint>\n        </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"40\">\n            <input matInput type=\"text\" placeholder=\"Titulo da mensagem\" [(ngModel)]=\"dados.post.titulo\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput type=\"text\" placeholder=\"Sub-titulo da mensagem\" [(ngModel)]=\"dados.post.subtitulo\">\n        </mat-form-field>\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n\n\n<input type=\"file\" style=\"display: none\" #fileInput (change)=\"mudouArquivo($event)\" >\n<button mat-stroked-button color=\"primary\" (click)=\"fileInput.click()\">\n    <mat-icon>\n        add_a_photo\n    </mat-icon>\n    Adicionar uma foto\n</button>\n<p *ngIf=\"nomeArquivo!=''\">\n    <strong>\n        Arquivo:\n    </strong>\n    {{nomeArquivo}}\n    <mat-icon>\n        done \n    </mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">Enviar</button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEventType, HttpEvent} from '@angular/common/http';\nimport { Post } from './posts';\n@Injectable()\nexport class PostService {\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get('/api/').subscribe(\n      (posts: any[]) => {\n        for(let p of posts) {\n          this.posts.push(\n            new Post(\n              p.nome,\n              p.titulo,\n              p.subtitulo,\n              p.email, \n              p.mensagem, \n              p.arquivo,\n              p.id,\n              p.likes\n            ),\n          );\n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File) {\n    \n    const uploadData = new FormData();\n\n    uploadData.append('nome', post.nome);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('email', post.email);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n    \n    this.http.post(\"/api/\", uploadData, {reportProgress: true, observe: 'events'}).subscribe(\n      (event: any) => {\n        if(event.type == HttpEventType.Response) {\n          \n          let p: any = event.body;\n          this.posts.push(\n            new Post(\n              p.nome,\n              p.titulo,\n              p.subtitulo,\n              p.email, \n              p.mensagem, \n              p.arquivo,\n              p.id,\n              p.likes\n            ),\n          )\n        }\n        if(event.type == HttpEventType.UploadProgress) {\n          console.log(event);\n        }\n    });\n    \n\n  }\n\n  like(id: number) {\n    this.http.get('/api/like/' + id)\n    .subscribe((event: any) => {\n        let likes = event.likes;\n        let res = this.posts.find((e) => e.id == id);\n        res.likes = likes;\n      \n    });\n  }\n\n  apagar(id: number) {\n    this.http.delete('/api/' + id).subscribe((event: any) => {\n      \n      let del =this.posts.findIndex((e) => e.id == id);\n      if(del >= 0) {\n        this.posts.splice(del, 1);\n      }\n    })\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../posts';\nimport { PostService } from '../post.service';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(\n    private postService: PostService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  like() {\n    this.postService.like(this.post.id);\n  }\n\n  apagar() {\n    this.postService.apagar(this.post.id);\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar ></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"./storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"primary\" (click)=\"like()\">LIKE</button>\n      <button mat-button color=\"warn\" (click)=\"apagar()\">Apagar</button>\n      <mat-icon color=\"warn\" *ngIf=\"post.likes > 0\" [matBadge]=\"post.likes\" matBadgePosition=\"above after\" matBadgeColor=\"warn\" matBadgeOverlap=\"false\">\n        favorite\n      </mat-icon>\n    </mat-card-actions>\n  </mat-card>","export class Post {\r\n    \r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number,\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\n// new Post('nome', 'titulo', 'subtitulo', 'email', 'mensagem');","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}